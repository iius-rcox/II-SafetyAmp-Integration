{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workbookDisplayName": { "type": "string", "defaultValue": "SafetyAmp Integration Dashboard" },
    "workbookSourceId": { "type": "string" },
    "workbookId": { "type": "string", "defaultValue": "[newGuid()]" },
    "containerName": { "type": "string", "defaultValue": "safety-amp-agent" },
    "namespace": { "type": "string", "defaultValue": "safety-amp" }
  },
  "resources": [
    {
      "name": "[parameters('workbookId')]",
      "type": "microsoft.insights/workbooks",
      "apiVersion": "2022-04-01",
      "location": "[resourceGroup().location]",
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# SafetyAmp Integration Dashboard\\n\\nMetrics & logs overview for the SafetyAmp integration.\"}},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"containerName\",\"name\":\"containerName\",\"type\":1,\"value\":\"[parameters('containerName')]\"},{\"id\":\"namespace\",\"name\":\"namespace\",\"type\":1,\"value\":\"[parameters('namespace')]\"}]}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let containerName = '{containerName}';\\nlet ns = '{namespace}';\\nContainerLogV2\\n| where TimeGenerated >= ago(24h)\\n| where Namespace == ns\\n| where ContainerName =~ containerName\\n| extend d = todynamic(LogMessage)\\n| where isnotnull(d)\\n| where tostring(d.operation) in (\"sync_start\", \"sync_complete\", \"sync_failed\")\\n| extend session_id = tostring(d.session_id),\\n         sync_type = tostring(d.sync_type),\\n         metrics = todynamic(d.metrics),\\n         duration = todouble(metrics.session_duration_seconds),\\n         records_processed = todouble(metrics.records_processed)\\n| where isnotempty(session_id)\\n| summarize StartTime = minif(TimeGenerated, tostring(d.operation)==\"sync_start\"),\\n            EndTime = maxif(TimeGenerated, tostring(d.operation) in (\"sync_complete\",\"sync_failed\")),\\n            Status = iff(countif(tostring(d.operation)==\"sync_complete\")>0, \"Success\", iff(countif(tostring(d.operation)==\"sync_failed\")>0, \"Failed\", \"Running\")),\\n            RecordsProcessed = maxif(records_processed, tostring(d.operation)==\"sync_complete\"),\\n            DurationSeconds = maxif(duration, tostring(d.operation)==\"sync_complete\")\\n  by SessionId = session_id, SyncType = sync_type\\n| order by StartTime desc\",\"size\":1,\"title\":\"Recent Sync Runs (24h)\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let containerName = '{containerName}';\\nlet ns = '{namespace}';\\nContainerLogV2\\n| where TimeGenerated >= ago(24h)\\n| where Namespace == ns\\n| where ContainerName =~ containerName\\n| extend d = todynamic(LogMessage)\\n| where isnotnull(d)\\n| where tostring(d.operation) in (\"cache_status\", \"cache_update\") or LogMessage contains \"cache_status\" or LogMessage contains \"cache_update\"\\n| extend cache_name = tostring(d.cache_name),\\n         metrics = todynamic(d.metrics),\\n         cache_size_bytes = todouble(metrics.cache_size_bytes),\\n         items_cached = todouble(metrics.items_cached),\\n         cache_ttl_seconds = todouble(metrics.cache_ttl_seconds),\\n         cache_valid = tobool(metrics.cache_valid)\\n| where isnotempty(cache_name)\\n| summarize LastUpdate = max(TimeGenerated),\\n            Size = max(cache_size_bytes),\\n            Items = max(items_cached),\\n            TTL = max(cache_ttl_seconds),\\n            Valid = max(cache_valid)\\n  by CacheName = cache_name\\n| extend AgeMinutes = round((now() - LastUpdate) / 1m, 0)\",\"size\":1,\"title\":\"Last Cache Update (24h)\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let containerName = '{containerName}';\\nlet ns = '{namespace}';\\nContainerLogV2\\n| where TimeGenerated >= ago(24h)\\n| where Namespace == ns\\n| where ContainerName =~ containerName\\n| extend d = todynamic(LogMessage)\\n| where isnotnull(d)\\n| extend op = tostring(d.operation), et = tostring(d.entity_type), err = tostring(d.error_type)\\n| where op in (\"created\",\"updated\",\"deleted\",\"error_logged\") or LogLevel == \"Error\"\\n| summarize Count = count() by Action = op, EntityType = coalesce(et, \"unknown\"), ErrorType = coalesce(err, \"\")\\n| order by Count desc\",\"size\":1,\"title\":\"Changes / Errors (24h)\"}}],\"parameters\":[{\"name\":\"containerName\",\"type\":1,\"isRequired\":true,\"value\":\"[parameters('containerName')]\"},{\"name\":\"namespace\",\"type\":1,\"isRequired\":true,\"value\":\"[parameters('namespace')]\"}]}",
        "version": "1.0",
        "sourceId": "[parameters('workbookSourceId')]",
        "category": "workbook"
      }
    }
  ],
  "outputs": {
    "workbookResourceId": {
      "type": "string",
      "value": "[resourceId('microsoft.insights/workbooks', parameters('workbookId'))]"
    }
  }
}
