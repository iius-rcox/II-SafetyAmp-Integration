apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: n8n-data
  namespace: n8n
  labels:
    app: n8n
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: managed-csi
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: n8n-secrets
  namespace: n8n
  labels:
    app: n8n
type: Opaque
stringData:
  # Change these values in production
  N8N_ENCRYPTION_KEY: "your-32-character-encryption-key-here"
  N8N_USER_MANAGEMENT_JWT_SECRET: "your-jwt-secret-here"
  # Database connection string - update with your Azure SQL details
  DB_POSTGRESDB_HOST: "your-azure-sql-server.database.windows.net"
  DB_POSTGRESDB_PORT: "1433"
  DB_POSTGRESDB_DATABASE: "n8n"
  DB_POSTGRESDB_USER: "n8n_user"
  DB_POSTGRESDB_PASSWORD: "your-password-here"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: n8n-config
  namespace: n8n
  labels:
    app: n8n
data:
  N8N_HOST: "n8n.dev.ii-us.com"
  N8N_PORT: "5678"
  N8N_PROTOCOL: "https"
  WEBHOOK_URL: "https://n8n.dev.ii-us.com/"
  GENERIC_TIMEZONE: "America/Chicago"
  N8N_EDITOR_BASE_URL: "https://n8n.dev.ii-us.com/"
  N8N_LOG_LEVEL: "info"
  N8N_LOG_OUTPUT: "console"
  DB_TYPE: "postgresdb"
  N8N_METRICS: "true"
  N8N_DISABLE_PRODUCTION_MAIN_PROCESS: "false"
  EXECUTIONS_PROCESS: "main"
  N8N_SECURE_COOKIE: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: n8n
  labels:
    app: n8n
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      containers:
      - name: n8n
        image: docker.n8n.io/n8nio/n8n:latest
        ports:
        - containerPort: 5678
          name: http
        env:
        - name: N8N_HOST
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_HOST
        - name: N8N_PORT
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_PORT
        - name: N8N_PROTOCOL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_PROTOCOL
        - name: WEBHOOK_URL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: WEBHOOK_URL
        - name: GENERIC_TIMEZONE
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: GENERIC_TIMEZONE
        - name: N8N_EDITOR_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_EDITOR_BASE_URL
        - name: N8N_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_LOG_LEVEL
        - name: N8N_LOG_OUTPUT
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_LOG_OUTPUT
        - name: DB_TYPE
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: DB_TYPE
        - name: N8N_METRICS
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_METRICS
        - name: N8N_DISABLE_PRODUCTION_MAIN_PROCESS
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_DISABLE_PRODUCTION_MAIN_PROCESS
        - name: EXECUTIONS_PROCESS
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: EXECUTIONS_PROCESS
        - name: N8N_SECURE_COOKIE
          valueFrom:
            configMapKeyRef:
              name: n8n-config
              key: N8N_SECURE_COOKIE
        - name: N8N_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: N8N_ENCRYPTION_KEY
        - name: N8N_USER_MANAGEMENT_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: N8N_USER_MANAGEMENT_JWT_SECRET
        - name: DB_POSTGRESDB_HOST
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: DB_POSTGRESDB_HOST
        - name: DB_POSTGRESDB_PORT
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: DB_POSTGRESDB_PORT
        - name: DB_POSTGRESDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: DB_POSTGRESDB_DATABASE
        - name: DB_POSTGRESDB_USER
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: DB_POSTGRESDB_USER
        - name: DB_POSTGRESDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: DB_POSTGRESDB_PASSWORD
        volumeMounts:
        - name: n8n-data
          mountPath: /home/node/.n8n
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5678
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5678
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: n8n-data
        persistentVolumeClaim:
          claimName: n8n-data
---
apiVersion: v1
kind: Service
metadata:
  name: n8n-service
  namespace: n8n
  labels:
    app: n8n
spec:
  type: ClusterIP
  ports:
  - port: 5678
    targetPort: 5678
    protocol: TCP
    name: http
  selector:
    app: n8n
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: n8n-ingress
  namespace: n8n
  labels:
    app: n8n
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - n8n.dev.ii-us.com
    secretName: n8n-tls
  rules:
  - host: n8n.dev.ii-us.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: n8n-service
            port:
              number: 5678