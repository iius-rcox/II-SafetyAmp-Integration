apiVersion: v1
kind: ServiceAccount
metadata:
  name: safety-amp-workload-identity-sa
  namespace: safety-amp
  labels:
    app: safety-amp
  annotations:
    azure.workload.identity/client-id: "a2bcb3ce-a89b-43af-804c-e8029e0bafb4"
    azure.workload.identity/tenant-Id: "953922e6-5370-4a01-a3d5-773a30df726b"
---
apiVersion: v1
kind: Secret
metadata:
  name: safety-amp-secrets
  namespace: safety-amp
  labels:
    app: safety-amp
type: Opaque
stringData:
  AZURE_KEY_VAULT_URL: "https://iius-akv.vault.azure.net/"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_PASSWORD: ""
  REDIS_DB: "0"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: safety-amp-config
  namespace: safety-amp
  labels:
    app: safety-amp
data:
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  ENVIRONMENT: "production"
  SYNC_INTERVAL: "900"
  BATCH_SIZE: "500"
  CACHE_TTL_HOURS: "4"
  CACHE_REFRESH_INTERVAL_HOURS: "4"
  API_RATE_LIMIT_CALLS: "60"
  API_RATE_LIMIT_PERIOD: "61"
  MAX_RETRY_ATTEMPTS: "5"
  RETRY_DELAY_SECONDS: "30"
  HEALTH_CHECK_PORT: "8080"
  HEALTH_CHECK_TIMEOUT: "5"
  METRICS_PORT: "9090"
  SQL_AUTH_MODE: "sql_auth"
  DB_POOL_SIZE: "8"
  DB_MAX_OVERFLOW: "15"
  DB_POOL_TIMEOUT: "30"
  DB_POOL_RECYCLE: "3600"
  SAFETY_AMP_BASE_URL: "https://api.safetyamp.com"
  SAFETY_AMP_TIMEOUT: "30"
  CIRCUIT_BREAKER_FAILURE_THRESHOLD: "5"
  CIRCUIT_BREAKER_RECOVERY_TIMEOUT: "30"
  MEMORY_PROFILER_ENABLED: "false"
  MEMORY_PROFILER_INTERVAL: "300"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: safety-amp-agent
  namespace: safety-amp
  labels:
    app: safety-amp
    component: agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: safety-amp
      component: agent
  template:
    metadata:
      labels:
        app: safety-amp
        component: agent
        azure.workload.identity/use: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: safety-amp-workload-identity-sa
      imagePullSecrets:
      - name: acr-secret
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: In
                values:
                - user
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - safety-amp
              topologyKey: kubernetes.io/hostname
      containers:
      - name: safety-amp-agent
        image: safety-amp/app:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: health
        - containerPort: 9090
          name: metrics
        env:
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: LOG_LEVEL
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: LOG_FORMAT
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: ENVIRONMENT
        - name: SYNC_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: SYNC_INTERVAL
        - name: CACHE_TTL_HOURS
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: CACHE_TTL_HOURS
        - name: CACHE_REFRESH_INTERVAL_HOURS
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: CACHE_REFRESH_INTERVAL_HOURS
        - name: BATCH_SIZE
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: BATCH_SIZE
        - name: API_RATE_LIMIT_CALLS
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: API_RATE_LIMIT_CALLS
        - name: API_RATE_LIMIT_PERIOD
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: API_RATE_LIMIT_PERIOD
        - name: MAX_RETRY_ATTEMPTS
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: MAX_RETRY_ATTEMPTS
        - name: RETRY_DELAY_SECONDS
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: RETRY_DELAY_SECONDS
        - name: HEALTH_CHECK_PORT
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: HEALTH_CHECK_PORT
        - name: HEALTH_CHECK_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: HEALTH_CHECK_TIMEOUT
        - name: METRICS_PORT
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: METRICS_PORT
        - name: DB_POOL_SIZE
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: DB_POOL_SIZE
        - name: DB_MAX_OVERFLOW
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: DB_MAX_OVERFLOW
        - name: DB_POOL_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: DB_POOL_TIMEOUT
        - name: DB_POOL_RECYCLE
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: DB_POOL_RECYCLE
        - name: SAFETY_AMP_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: SAFETY_AMP_BASE_URL
        - name: SAFETY_AMP_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: SAFETY_AMP_TIMEOUT
        - name: CIRCUIT_BREAKER_FAILURE_THRESHOLD
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: CIRCUIT_BREAKER_FAILURE_THRESHOLD
        - name: CIRCUIT_BREAKER_RECOVERY_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: CIRCUIT_BREAKER_RECOVERY_TIMEOUT
        - name: MEMORY_PROFILER_ENABLED
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: MEMORY_PROFILER_ENABLED
        - name: MEMORY_PROFILER_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: MEMORY_PROFILER_INTERVAL
        - name: SQL_AUTH_MODE
          valueFrom:
            configMapKeyRef:
              name: safety-amp-config
              key: SQL_AUTH_MODE
        - name: AZURE_KEY_VAULT_URL
          valueFrom:
            secretKeyRef:
              name: safety-amp-secrets
              key: AZURE_KEY_VAULT_URL
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: safety-amp-secrets
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: safety-amp-secrets
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: safety-amp-secrets
              key: REDIS_PASSWORD
        - name: REDIS_DB
          valueFrom:
            secretKeyRef:
              name: safety-amp-secrets
              key: REDIS_DB
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: safety-amp-service
  namespace: safety-amp
  labels:
    app: safety-amp
    component: agent
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: health
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app: safety-amp
    component: agent
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: safety-amp-sync-job
  namespace: safety-amp
  labels:
    app: safety-amp
    component: sync-job
spec:
  schedule: "*/15 * * * *"
  timeZone: "America/Chicago"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 3
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 2
      template:
        metadata:
          labels:
            app: safety-amp
            component: sync-job
            azure.workload.identity/use: "true"
        spec:
          restartPolicy: Never
          serviceAccountName: safety-amp-workload-identity-sa
          containers:
          - name: safety-amp-sync
            image: safety-amp/app:latest
            imagePullPolicy: Always
            command: ["python", "sync_batch.py"]
            env:
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: safety-amp-config
                  key: LOG_LEVEL
            - name: LOG_FORMAT
              valueFrom:
                configMapKeyRef:
                  name: safety-amp-config
                  key: LOG_FORMAT
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: safety-amp-config
                  key: ENVIRONMENT
            - name: DB_POOL_SIZE
              value: "2"
            - name: DB_MAX_OVERFLOW
              value: "5"
            - name: BATCH_MODE
              value: "true"
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: safety-amp-secrets
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: safety-amp-secrets
                  key: REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: safety-amp-secrets
                  key: REDIS_PASSWORD
            - name: REDIS_DB
              valueFrom:
                secretKeyRef:
                  name: safety-amp-secrets
                  key: REDIS_DB
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: safety-amp-integration-hpa
  namespace: safety-amp
  labels:
    app: safety-amp
    component: agent
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: safety-amp-agent
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: safetyamp_current_sync_operations
      target:
        type: AverageValue
        averageValue: "2"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: safety-amp-integration-netpol
  namespace: safety-amp
  labels:
    app: safety-amp
spec:
  podSelector:
    matchLabels:
      app: safety-amp
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
  - from:
    - namespaceSelector:
        matchLabels:
          name: safety-amp
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
  egress:
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  - to: []
    ports:
    - protocol: TCP
      port: 443
  - to: []
    ports:
    - protocol: TCP
      port: 80
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 443
  - to:
    - namespaceSelector:
        matchLabels:
          name: safety-amp
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: safety-amp
  labels:
    app: redis
data:
  redis.conf: |
    bind 0.0.0.0
    port 6379
    timeout 0
    tcp-keepalive 300
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile ""
    databases 16
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    maxmemory 200mb
    maxmemory-policy allkeys-lru
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    aof-use-rdb-preamble yes
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: safety-amp
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: safety-amp
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        command: ["redis-server", "/etc/redis/redis.conf"]
        ports:
        - containerPort: 6379
          name: redis
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
      volumes:
      - name: redis-data
        emptyDir: {}
      - name: redis-config
        configMap:
          name: redis-config