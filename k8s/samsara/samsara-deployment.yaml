apiVersion: v1
kind: Secret
metadata:
  name: samsara-secrets
  namespace: samsara
  labels:
    app: samsara
type: Opaque
stringData:
  # Samsara API credentials
  SAMSARA_API_TOKEN: "your-samsara-api-token-here"
  SAMSARA_ORG_ID: "your-samsara-org-id-here"
  # Database connection
  DATABASE_URL: "your-database-connection-string-here"
  # Azure Service Principal for authentication
  AZURE_CLIENT_ID: "your-azure-client-id"
  AZURE_CLIENT_SECRET: "your-azure-client-secret"
  AZURE_TENANT_ID: "your-azure-tenant-id"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: samsara-config
  namespace: samsara
  labels:
    app: samsara
data:
  # Application configuration
  LOG_LEVEL: "INFO"
  ENVIRONMENT: "development"
  SYNC_INTERVAL: "600"  # 10 minutes
  BATCH_SIZE: "50"
  RETRY_ATTEMPTS: "3"
  RETRY_DELAY: "60"
  HEALTH_CHECK_PORT: "8080"
  METRICS_PORT: "9090"
  # Samsara API settings
  SAMSARA_BASE_URL: "https://api.samsara.com"
  SAMSARA_API_VERSION: "2024-12-01"
  SAMSARA_TIMEOUT: "30"
  SAMSARA_RATE_LIMIT: "100"  # requests per minute
  # Asset sync settings
  ASSET_SYNC_ENABLED: "true"
  VEHICLE_SYNC_ENABLED: "true"
  DRIVER_SYNC_ENABLED: "true"
  LOCATION_SYNC_ENABLED: "true"
  MAINTENANCE_SYNC_ENABLED: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: samsara-integration
  namespace: samsara
  labels:
    app: samsara
    component: integration
spec:
  replicas: 1
  selector:
    matchLabels:
      app: samsara
      component: integration
  template:
    metadata:
      labels:
        app: samsara
        component: integration
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: samsara-integration
        # Update this image to your actual Samsara integration image
        image: iiusacr.azurecr.io/samsara-integration:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: health
        - containerPort: 9090
          name: metrics
        env:
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: LOG_LEVEL
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: ENVIRONMENT
        - name: SYNC_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: SYNC_INTERVAL
        - name: BATCH_SIZE
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: BATCH_SIZE
        - name: RETRY_ATTEMPTS
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: RETRY_ATTEMPTS
        - name: RETRY_DELAY
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: RETRY_DELAY
        - name: HEALTH_CHECK_PORT
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: HEALTH_CHECK_PORT
        - name: METRICS_PORT
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: METRICS_PORT
        - name: SAMSARA_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: SAMSARA_BASE_URL
        - name: SAMSARA_API_VERSION
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: SAMSARA_API_VERSION
        - name: SAMSARA_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: SAMSARA_TIMEOUT
        - name: SAMSARA_RATE_LIMIT
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: SAMSARA_RATE_LIMIT
        - name: ASSET_SYNC_ENABLED
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: ASSET_SYNC_ENABLED
        - name: VEHICLE_SYNC_ENABLED
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: VEHICLE_SYNC_ENABLED
        - name: DRIVER_SYNC_ENABLED
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: DRIVER_SYNC_ENABLED
        - name: LOCATION_SYNC_ENABLED
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: LOCATION_SYNC_ENABLED
        - name: MAINTENANCE_SYNC_ENABLED
          valueFrom:
            configMapKeyRef:
              name: samsara-config
              key: MAINTENANCE_SYNC_ENABLED
        - name: SAMSARA_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: samsara-secrets
              key: SAMSARA_API_TOKEN
        - name: SAMSARA_ORG_ID
          valueFrom:
            secretKeyRef:
              name: samsara-secrets
              key: SAMSARA_ORG_ID
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: samsara-secrets
              key: DATABASE_URL
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: samsara-secrets
              key: AZURE_CLIENT_ID
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: samsara-secrets
              key: AZURE_CLIENT_SECRET
        - name: AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              name: samsara-secrets
              key: AZURE_TENANT_ID
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
        # Add volume mounts if needed for data persistence
        # volumeMounts:
        # - name: data-volume
        #   mountPath: /app/data
      # Add volumes if needed
      # volumes:
      # - name: data-volume
      #   persistentVolumeClaim:
      #     claimName: samsara-data
---
apiVersion: v1
kind: Service
metadata:
  name: samsara-service
  namespace: samsara
  labels:
    app: samsara
    component: integration
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: health
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app: samsara
    component: integration
---
# CronJob for scheduled asset synchronization
apiVersion: batch/v1
kind: CronJob
metadata:
  name: samsara-sync-job
  namespace: samsara
  labels:
    app: samsara
    component: sync-job
spec:
  schedule: "0 */6 * * *"  # Every 6 hours
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: samsara
            component: sync-job
        spec:
          restartPolicy: OnFailure
          containers:
          - name: samsara-sync
            # Update this image to your actual Samsara sync job image
            image: iiusacr.azurecr.io/samsara-sync:latest
            imagePullPolicy: Always
            env:
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: samsara-config
                  key: LOG_LEVEL
            - name: BATCH_SIZE
              valueFrom:
                configMapKeyRef:
                  name: samsara-config
                  key: BATCH_SIZE
            - name: SAMSARA_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: samsara-secrets
                  key: SAMSARA_API_TOKEN
            - name: SAMSARA_ORG_ID
              valueFrom:
                secretKeyRef:
                  name: samsara-secrets
                  key: SAMSARA_ORG_ID
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: samsara-secrets
                  key: DATABASE_URL
            resources:
              requests:
                memory: "128Mi"
                cpu: "50m"
              limits:
                memory: "256Mi"
                cpu: "200m"
---
# Optional: Create a PVC if the integration needs persistent storage
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: samsara-data
#   namespace: samsara
#   labels:
#     app: samsara
# spec:
#   accessModes:
#     - ReadWriteOnce
#   storageClassName: managed-csi
#   resources:
#     requests:
#       storage: 5Gi